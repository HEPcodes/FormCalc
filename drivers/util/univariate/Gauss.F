* Gauss.F
* Gaussian integration of a vector
* this file is part of FormCalc
* last modified 24 Mar 19 th

#include "config.h"

#define C 1:ncomp

* nodes may be one of 8, 16, 24, 32 (see GaussData.m).

	subroutine Gauss(ncomp, lower, upper, integrand, userdata,
     &    nodes, result)
	implicit none
	integer ncomp, nodes
	RealType lower, upper, result(C)
	external integrand, userdata

	RealType samples(MAXCOMP,2), mid, span, h
	integer c, n, p

	RealType gaussdata(80)
	data gaussdata /
     &    .4801449282487681158417804342847365D0,
     &    .050614268145188129576265677154981095D0,
     &    .39833323870681336979577696823791522D0,
     &    .11119051722668723527217799721312044D0,
     &    .26276620495816449290886952459462317D0,
     &    .15685332293894364366898110099330066D0,
     &    .09171732124782490246973807118009199D0,
     &    .18134189168918099148257522463859781D0,
     &    .49470046749582496629807708672516631D0,
     &    .013576229705877047425890286228009052D0,
     &    .47228751153661628803899420776730417D0,
     &    .031126761969323946431421918497188847D0,
     &    .43281560119391587194023394885619657D0,
     &    .047579255841246392404962553801123113D0,
     &    .37770220417750151694755059742372113D0,
     &    .06231448562776693602623814109600821D0,
     &    .30893812220132187422333588202439551D0,
     &    .074797994408288366040750865273739274D0,
     &    .22900838882861369317120972149178879D0,
     &    .084578259697501269094656039515179981D0,
     &    .14080177538962945661523025073024805D0,
     &    .09130170752246179443338183398460997D0,
     &    .047506254918818720092659667712479032D0,
     &    .094725305227534248142698361604141553D0,
     &    .49759360999851068008999870485036841D0,
     &    .0061706148999935997734028335350186458D0,
     &    .48736427798565474909919599650408453D0,
     &    .014265694314466831590653907975939143D0,
     &    .46913727600136637926182450085436072D0,
     &    .022138719408709903084301374105669114D0,
     &    .44320776350220051710657717099109838D0,
     &    .029649292457718390373183879250054292D0,
     &    .4100009929869514609769749363348726D0,
     &    .036673240705540152867016807626558259D0,
     &    .37006209578927718212191405154998921D0,
     &    .043095080765976637958592601491871334D0,
     &    .32404682596848778462624789345537381D0,
     &    .048809326052056944134940332232123577D0,
     &    .27271073569441976782918780860918619D0,
     &    .053722135057982817391288671223303111D0,
     &    .21689675381302256924354211595667486D0,
     &    .05775283402686280067667224195339178D0,
     &    .15752133984808168719339664565990512D0,
     &    .060835236463901695602231576738131213D0,
     &    .095559433736808154579319910378534816D0,
     &    .062918728173414148060687691255591844D0,
     &    .032028446431302813042521541312372519D0,
     &    .063969097673376078487028082612347686D0,
     &    .49863193092474078177249056433252036D0,
     &    .0035093050047350483002035318694265913D0,
     &    .49280575577263416770008752231545099D0,
     &    .0081371973654528353025852811031933091D0,
     &    .48238112779375321538690596405913748D0,
     &    .012696032654631029727876294894612015D0,
     &    .46745303796886984458545956741770466D0,
     &    .017136931456510716551343866126186353D0,
     &    .44816057788302606198265362185960613D0,
     &    .021417949011113340328439323303062764D0,
     &    .42468380686628498506684650248387127D0,
     &    .025499029631188088098081622344760848D0,
     &    .39724189798397120348154864948521445D0,
     &    .029342046739267773572641818650085443D0,
     &    .36609105937014484019371333254563357D0,
     &    .032911111388180923418825031853469386D0,
     &    .33152213346510760048755758433161918D0,
     &    .036172897054424253112699678239243896D0,
     &    .29385787862038116452037273820091343D0,
     &    .039096947893535153235870459414153336D0,
     &    .25344995446611469501187373718891062D0,
     &    .041655962113473377611099537302174306D0,
     &    .21067563806531767268205971808621324D0,
     &    .043826046502201905571385731375901144D0,
     &    .165934301141063824889958402865094D0,
     &    .045586939347881942356434288555818531D0,
     &    .11964368112606853727230160458275076D0,
     &    .04692219954040228281959011883405863D0,
     &    .072235980791398246742593186799405326D0,
     &    .04781936003963742970954100110206555D0,
     &    .024153832843869158117406285220251082D0,
     &    .048270044257363900283382415031787897D0 /

	p = nodes/8
	p = (1 - 2*p)**2

	span = upper - lower
	mid = (lower + upper)/2

	result = 0

	do n = 1, nodes, 2
	  h = span*gaussdata(p)
	  call integrand(1, mid - h, ncomp, samples(1,1), userdata)
	  call integrand(1, mid + h, ncomp, samples(1,2), userdata)
	  h = span*gaussdata(p + 1)
	  result(C) = result(C) + h*(samples(C,1) + samples(C,2))
	  p = p + 2
	enddo
	end

